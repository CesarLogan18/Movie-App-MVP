apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply from: "$rootProject.projectDir/app/config.gradle"

def configuration = ext.configuration;
android {
    compileSdkVersion configuration.compileSdkVersion
    buildToolsVersion configuration.buildToolsVersion

    defaultConfig {
        applicationId configuration.applicationId
        minSdkVersion configuration.minimumSdkVersion
        targetSdkVersion configuration.targetSdkVersion
        versionCode buildVersionCode()
        versionName buildVersionName()
    }
    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"https://api.themoviedb.org/\"")
            buildConfigField("String", "API_KEY", "\"e1c2f55d9f2e93961c295046f2217aa4\"")
        }
        release {

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
greendao {
    schemaVersion 1
}

apply from: "$rootProject.projectDir/app/library.gradle"
def version = ext.version;

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // android support libraries
    compile "com.android.support:appcompat-v7:${version.supportLibraryVersion}"
    compile "com.android.support:appcompat-v7:${version.supportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${version.supportLibraryVersion}"
    compile "com.android.support:cardview-v7:${version.supportLibraryVersion}"
    compile "com.android.support:design:${version.supportLibraryVersion}"
    compile "com.android.support:support-vector-drawable:${version.supportLibraryVersion}"
    compile "com.android.support:animated-vector-drawable:${version.supportLibraryVersion}"

    // fonts
    compile "uk.co.chrisjenx:calligraphy:${version.caligraphyVersion}"

    // network
    compile "com.amitshekhar.android:rx2-android-networking:${version.rx2FastAndroidNetworking}"

    //glide
    compile "com.github.bumptech.glide:glide:${version.glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${version.glideVersion}"

    // parser
    compile "com.google.code.gson:gson:${version.gsonVersion}"

    // database
    compile "org.greenrobot:greendao:${version.greenDaoVersion}"

    // debug database
    debugCompile "com.amitshekhar.android:debug-db:${version.debugDBVersion}"

    //alerts
    compile "cn.pedant.sweetalert:library:${version.dialogLibraryVersion}"

    // // dependency injection
    compile "com.google.dagger:dagger:${version.dagger2Version}"
    annotationProcessor "com.google.dagger:dagger-compiler:${version.dagger2Version}"

    // reactive
    compile "io.reactivex.rxjava2:rxjava:${version.rxjava2Version}"
    compile "io.reactivex.rxjava2:rxandroid:${version.rxandroidVersion}"

    // code generator for view
    compile "com.jakewharton:butterknife:${version.butterKnifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${version.butterKnifeVersion}"

    // dependencies for local unit tests
    testCompile "junit:junit:${version.junitVersion}"
    testCompile "org.mockito:mockito-core:${version.mockitoVersion}"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:${version.dagger2Version}"

    // logger
    compile "com.jakewharton.timber:timber:${version.timberVersion}"


    compile 'javax.inject:javax.inject:1'
    testCompile 'junit:junit:4.12'
    provided 'javax.annotation:jsr250-api:1.0'
}
